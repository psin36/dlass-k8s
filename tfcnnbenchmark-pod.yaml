apiVersion: v1
kind: Pod
metadata:
  name: tfcnnbenchmarkpod-deployment-imagenet-tfrecord-pod
spec:
  containers:
  - name: tfcnnbenchmarkpod-imagenet-tfrecord-container
    image: prachisinha/dlaas_benchmarks_tfcnn_sample
    resources:
       limits:
         alpha.kubernetes.io/nvidia-gpu: "1"
         cpu: "8"
         memory: "32G"
       requests:
         alpha.kubernetes.io/nvidia-gpu: "1"
         cpu: "8"
         memory: "32G"
    workingDir: "/root/data/benchmarks/"
    args: [/bin/sh, -c, "rm -rf tfcnnbenchmarks-imagenet-tfrecord-training-log.txt ; python scripts/tf_cnn_benchmarks/tf_cnn_benchmarks.py --model resnet50 --batch_size 64 --num_batches=2000 --num_gpus 2 --data_dir /mnt/s3fs/ --data_name imagenet  2>&1 | tee /mnt/s3fs/tfcnnbenchmarks-imagenet-tfrecord-training-log.txt"]
    #when using synthetic data
    #args: [/bin/sh, -c, "rm -rf training-log.txt ; python scripts/tf_cnn_benchmarks/tf_cnn_benchmarks.py --model resnet50 --batch_size 64 --num_batches=2000 --num_gpus 2 --data_name imagenet  2>&1 | tee tfcnnbenchmarks-imagenet-tfrecord-training-log.txt"]
    volumeMounts:
    - mountPath: "/mnt/s3fs"
      name: tfcnnbenchmarkpod-volume-imagenet-tfrecord
  volumes:
  - name: tfcnnbenchmarkpod-volume-imagenet-tfrecord
    persistentVolumeClaim:
      claimName: tfcnnbenchmarkpod-pvc-imagenet-tfrecord
  restartPolicy: Never