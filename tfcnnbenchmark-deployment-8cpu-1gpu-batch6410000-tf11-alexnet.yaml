apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: tfcnnbenchmark-deployment-8cpu-1gpu-batch6410000-alexnet
  labels:
    app: tfcnnbenchmark
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tfcnnbenchmark
  template:
    metadata:
      annotations:  
        scheduler.alpha.kubernetes.io/tolerations: '[ { "key": "dedicated", "operator": "Equal", "value": "gpu-task" } ]'
        scheduler.alpha.kubernetes.io/nvidiaGPU: '{ "AllocationPriority": "Dense" }'
      labels:
        app: tfcnnbenchmark
    spec:
      volumes:
      - name: tfcnnbenchmark-volume-imagenet-tfrecord-alexnet
        persistentVolumeClaim:
          claimName: tfcnnbenchmark-pvc-imagenet-tfrecord-6-29
      tolerations: 
      - key: "dedicated"
        operator: "Equal"
        value: "gpu-task"
      nodeSelector:
        ibm-cloud.kubernetes.io/gpu-type: nvidia-TeslaP100
      containers:
      - name: tfcnnbenchmark-container-imagenet-tfrecord-alexnet
        image: prachisinha/dlaas_benchmarks_tfcnn_sample
        resources:
          limits:
            alpha.kubernetes.io/nvidia-gpu: "1"
            cpu: "8"
            memory: "32G"
          requests:
            alpha.kubernetes.io/nvidia-gpu: "1"
            cpu: "8"
            memory: "32G"
        workingDir: "/root/data/benchmarks/"
        args: [/bin/sh, -c, "python scripts/tf_cnn_benchmarks/tf_cnn_benchmarks.py --model=alexnet --num_intra_threads=4 --num_inter_threads=8 --print_training_accuracy=true --batch_size 64 --num_batches=10000 --num_gpus=1 --data_dir /mnt/s3fs/ --data_name imagenet  2>&1 | tee -a /mnt/s3fs/training-log-8cpu-1gpu-batch6410000-alexnet.txt"]
        #when using synthetic data
        #args: [/bin/sh, -c, "rm -rf training-log.txt ; python scripts/tf_cnn_benchmarks/tf_cnn_benchmarks.py --model resnet50 --batch_size 64 --num_batches=2000 --num_gpus 2 --data_name imagenet  2>&1 | tee tfcnnbenchmarks-imagenet-tfrecord-training-log.txt"]
        volumeMounts:
        - name: tfcnnbenchmark-volume-imagenet-tfrecord-alexnet
          mountPath: "/mnt/s3fs"
